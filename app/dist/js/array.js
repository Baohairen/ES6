"use strict";function countSymbols(r){console.log(Array.from(r).length)}var _slicedToArray=function(){function r(r,t){var o=[],e=!0,a=!1,i=void 0;try{for(var n,l=r[Symbol.iterator]();!(e=(n=l.next()).done)&&(o.push(n.value),!t||o.length!==t);e=!0);}catch(r){a=!0,i=r}finally{try{!e&&l.return&&l.return()}finally{if(a)throw i}}return o}return function(t,o){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return r(t,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();Array.from([[1,2,3]]),Array(),Array(3),Array(3,11,8);var ar1=[1,4,-4,10].find(function(r){return r<0});[1,5,10,15].findIndex(function(r,t,o){return r>9}).c.fill(7),["a","b","c"].fill(7,1,2);var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=["a","b"].keys()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0)var index=_step.value}catch(r){_didIteratorError=!0,_iteratorError=r}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=["a","b"].values()[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0)var elem=_step2.value}catch(r){_didIteratorError2=!0,_iteratorError2=r}finally{try{!_iteratorNormalCompletion2&&_iterator2.return&&_iterator2.return()}finally{if(_didIteratorError2)throw _iteratorError2}}var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _iterator3=["a","b"].entries()[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0)var _step3$value=_slicedToArray(_step3.value,2),_index=_step3$value[0],_elem=_step3$value[1]}catch(r){_didIteratorError3=!0,_iteratorError3=r}finally{try{!_iteratorNormalCompletion3&&_iterator3.return&&_iterator3.return()}finally{if(_didIteratorError3)throw _iteratorError3}}[1,2,3].includes(2)[3].includes(4)[3].includes(3,3);